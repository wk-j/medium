-- stack runghc --package strict

f :: [t] -> [[t]]
f [] = [[]]
f (x:xs) = f xs ++ map (x:) (f xs)

(|>) f x = x f

main :: IO ()
main = do
    let rs1 = 
           f [2,45,67,119,1,14,299::Int]
           |> filter ((<=331) . sum) 
           |> filter (\x -> length x > 1)
    print rs1

{-|
[[14,299],[1,299],[1,14],[1,14,299],[119,14],[119,1],[119,1,14],[67,14],[67,1],
[67,1,14],[67,119],[67,119,14],[67,119,1],[67,119,1,14],[45,14],[45,1],[45,1,14],
[45,119],[45,119,14],[45,119,1],[45,119,1,14],[45,67],[45,67,14],[45,67,1],
[45,67,1,14],[45,67,119],[45,67,119,14],[45,67,119,1],[45,67,119,1,14],[2,299],
[2,14],[2,14,299],[2,1],[2,1 ,299],[2,1,14],[2,1,14,299],[2,119],[2,119,14],[2,119,1],
[2,119,1,14],[2,67],[2,67,14],[2,67,1],[2,67,1,14],[2,67,119],[2,67,119,14],[2,67,119,1],
[2,67,119,1,14],[2,45],[2,45,14],[2,45,1],[2,45,1,14],[2,45,119],[2,45,119,14],
[2,45,119,1],[2,45,119,1,14],[2,45,67],[2,45,67,14],[2,45,67,1],[2,45,67,1,14],
[2,45,67,119],[2,45,67,119,14],[2,45,67,119,1],[2,45,67,119,1,14]]
|-}